{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.URL = 'http://localhost:3000/api';\n  }\n  signUp(user) {\n    return this.http.post(this.URL + '/signup', user);\n  }\n  signIn(user) {\n    return this.http.post(this.URL + '/signin', user);\n  }\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/home', {\n      skipLocationChange: true\n    });\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","router","URL","signUp","user","post","signIn","loggedIn","localStorage","getItem","getToken","logout","removeItem","navigateByUrl","skipLocationChange","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Documents\\GitHub\\TaskTraker\\src\\app\\services\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private URL = 'http://localhost:3000/api';\n\n  constructor(\n    private http: HttpClient,\n    private router:Router) { \n  \n  }\n\n  signUp(user: { email: string; password: string; }) {\n    return this.http.post<any>(this.URL + '/signup', user);\n  }\n\n  signIn(user: { email: string; password: string; }) {\n    return this.http.post<any>(this.URL + '/signin', user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  \n  \n  getToken() {\n    return localStorage.getItem('token');\n  }\n  \n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/home', { skipLocationChange: true });\n  }\n\n}\n\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAItBC,YACUC,IAAgB,EAChBC,MAAa;IADb,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAJR,KAAAC,GAAG,GAAG,2BAA2B;EAMzC;EAEAC,MAAMA,CAACC,IAA0C;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,IAAI,CAACH,GAAG,GAAG,SAAS,EAAEE,IAAI,CAAC;EACxD;EAEAE,MAAMA,CAACF,IAA0C;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,IAAI,CAACH,GAAG,GAAG,SAAS,EAAEE,IAAI,CAAC;EACxD;EAEAG,QAAQA,CAAA;IACN,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;EAIAC,QAAQA,CAAA;IACN,OAAOF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAE,MAAMA,CAAA;IACJH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACX,MAAM,CAACY,aAAa,CAAC,OAAO,EAAE;MAAEC,kBAAkB,EAAE;IAAI,CAAE,CAAC;EAClE;EAAC,QAAAC,CAAA,G;qBA/BUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}